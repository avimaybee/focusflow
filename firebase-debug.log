[debug] [2025-07-13T08:49:52.534Z] ----------------------------------------------------------------------
[debug] [2025-07-13T08:49:52.538Z] Command:       /nix/store/rbdrkcs5kkwpalxcd7c6bnm33lk2955n-nodejs-20.19.0/bin/node /home/user/.global_modules/bin/firebase deploy --only functions
[debug] [2025-07-13T08:49:52.538Z] CLI Version:   14.10.1
[debug] [2025-07-13T08:49:52.538Z] Platform:      linux
[debug] [2025-07-13T08:49:52.539Z] Node Version:  v20.19.0
[debug] [2025-07-13T08:49:52.539Z] Time:          Sun Jul 13 2025 08:49:52 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-13T08:49:52.539Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-13T08:49:53.104Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-13T08:49:53.106Z] > authorizing via signed-in user (twinstackstudio@gmail.com)
[debug] [2025-07-13T08:49:53.106Z] [iam] checking project focusflow-ai-w1jt3 for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2025-07-13T08:49:53.109Z] No OAuth tokens found
[debug] [2025-07-13T08:49:53.110Z] No OAuth tokens found
[debug] [2025-07-13T08:49:53.110Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-13T08:49:53.110Z] > authorizing via signed-in user (twinstackstudio@gmail.com)
[debug] [2025-07-13T08:49:53.112Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/focusflow-ai-w1jt3:testIamPermissions [none]
[debug] [2025-07-13T08:49:53.113Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/focusflow-ai-w1jt3:testIamPermissions x-goog-quota-user=projects/focusflow-ai-w1jt3
[debug] [2025-07-13T08:49:53.113Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/focusflow-ai-w1jt3:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-07-13T08:49:53.965Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/focusflow-ai-w1jt3:testIamPermissions 200
[debug] [2025-07-13T08:49:53.965Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/focusflow-ai-w1jt3:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-07-13T08:49:53.966Z] No OAuth tokens found
[debug] [2025-07-13T08:49:53.967Z] No OAuth tokens found
[debug] [2025-07-13T08:49:53.967Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-13T08:49:53.967Z] > authorizing via signed-in user (twinstackstudio@gmail.com)
[debug] [2025-07-13T08:49:53.967Z] >>> [apiv2][query] POST https://iam.googleapis.com/v1/projects/focusflow-ai-w1jt3/serviceAccounts/focusflow-ai-w1jt3@appspot.gserviceaccount.com:testIamPermissions [none]
[debug] [2025-07-13T08:49:53.971Z] >>> [apiv2][body] POST https://iam.googleapis.com/v1/projects/focusflow-ai-w1jt3/serviceAccounts/focusflow-ai-w1jt3@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[debug] [2025-07-13T08:49:54.990Z] <<< [apiv2][status] POST https://iam.googleapis.com/v1/projects/focusflow-ai-w1jt3/serviceAccounts/focusflow-ai-w1jt3@appspot.gserviceaccount.com:testIamPermissions 404
[debug] [2025-07-13T08:49:54.990Z] <<< [apiv2][body] POST https://iam.googleapis.com/v1/projects/focusflow-ai-w1jt3/serviceAccounts/focusflow-ai-w1jt3@appspot.gserviceaccount.com:testIamPermissions {"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}}
[debug] [2025-07-13T08:49:54.991Z] [functions] service account IAM check errored, deploy may fail: Request to https://iam.googleapis.com/v1/projects/focusflow-ai-w1jt3/serviceAccounts/focusflow-ai-w1jt3@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}},"response":{"statusCode":404}},"exit":1,"message":"Request to https://iam.googleapis.com/v1/projects/focusflow-ai-w1jt3/serviceAccounts/focusflow-ai-w1jt3@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account","status":404}
[info] 
[info] === Deploying to 'focusflow-ai-w1jt3'...
[info] 
[info] i  deploying functions 
[info] Running command: npm --prefix "$RESOURCE_DIR" run lint
[info] Running command: npm --prefix "$RESOURCE_DIR" run build
[debug] [2025-07-13T08:56:33.047Z] ----------------------------------------------------------------------
[debug] [2025-07-13T08:56:33.052Z] Command:       /nix/store/rbdrkcs5kkwpalxcd7c6bnm33lk2955n-nodejs-20.19.0/bin/node /nix/store/fprgfkwna33crhc86jqbf5878piivvgw-firebase-tools-14.7.0/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-13T08:56:33.053Z] CLI Version:   14.7.0
[debug] [2025-07-13T08:56:33.053Z] Platform:      linux
[debug] [2025-07-13T08:56:33.053Z] Node Version:  v20.19.0
[debug] [2025-07-13T08:56:33.054Z] Time:          Sun Jul 13 2025 08:56:33 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-13T08:56:33.054Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-13T08:56:34.569Z] openjdk version "21.0.5" 2024-10-15
OpenJDK Runtime Environment (build 21.0.5+1-nixos)
OpenJDK 64-Bit Server VM (build 21.0.5+1-nixos, mixed mode, sharing)

[debug] [2025-07-13T08:56:34.616Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: auth, firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  auth: Error when trying to check port 9099 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9099 {"metadata":{"emulator":{"name":"auth"},"message":"Error when trying to check port 9099 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9099"}}
[warn] ⚠  auth: Port 9099 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"auth"},"message":"Port 9099 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  auth: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"auth"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-13T08:56:34.653Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"auth":[{"address":"127.0.0.1","family":"IPv4","port":9099}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-13T08:56:34.660Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-13T08:56:34.683Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-13T08:56:34.683Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-13T08:56:34.683Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/w60wgw0k95kiq4yl5f561xhydyg07gf7-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/w60wgw0k95kiq4yl5f561xhydyg07gf7-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-13T08:56:43.034Z] Jul 13, 2025 8:56:42 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 8:56:42 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-13T08:56:43.198Z] API endpoint: http:// {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://"}}
[debug] [2025-07-13T08:56:43.198Z] 127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-13T08:57:10.218Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-13T08:57:10.219Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // A user can only interact with their own document.\n    match /users/{userId} {\n      allow get, create: if request.auth.uid == userId;\n      allow update: if request.auth.uid == userId\n                    && request.resource.data.diff(resource.data).affectedKeys()\n                       .hasOnly(['preferredPersona', 'favoritePrompts', 'lastLogin']);\n      allow list, delete: if false;\n    }\n\n    // Rules for the 'chats' subcollection.\n    match /users/{userId}/chats/{chatId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    \n    // Rules for the 'messages' sub-subcollection.\n    match /users/{userId}/chats/{chatId}/messages/{messageId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n\n    // Rules for user-generated content subcollections.\n    match /users/{userId}/summaries/{summaryId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/quizzes/{quizId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/flashcardSets/{setId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studyPlans/{planId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studySessions/{sessionId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/goals/{goalId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n\n    // Public summaries collection: Allow anyone to read, but disallow client writes.\n    match /publicSummaries/{slug} {\n      allow get: if true;\n      allow list, write: if false;\n    }\n\n    // Prompt templates can be read by any user, authenticated or not.\n    match /promptTemplates/{templateId} {\n      allow get, list: if true;\n      allow write: if false; // Disallow client writes\n    }\n\n    // Personas can be read by anyone, but not written to by clients.\n    match /personas/{personaId} {\n        allow get, list: if true;\n        allow write: if false; // Only backend/console should write\n    }\n\n        // Rules for Genkit sessions, scoped to the authenticated user.\n    match /users/{userId}/sessions/{sessionId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-13T08:57:10.236Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬─────────────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI             │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Authentication │ 127.0.0.1:9099 │ http://127.0.0.1:4000/auth      │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Firestore      │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└────────────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2025-07-13T08:57:10.359Z] Jul 13, 2025 8:57:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 8:57:10 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-13T08:57:11.012Z] Jul 13, 2025 8:57:11 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 8:57:11 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-13T08:57:13.705Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-13T08:57:13.710Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-13T09:06:41.724Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-13T09:06:41.724Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // A user can only interact with their own document.\n    match /users/{userId} {\n      allow get, create: if request.auth.uid == userId;\n      allow update: if request.auth.uid == userId\n                    && request.resource.data.diff(resource.data).affectedKeys()\n                       .hasOnly(['preferredPersona', 'favoritePrompts', 'lastLogin']);\n      allow list, delete: if false;\n    }\n    \n    // Rules for Genkit sessions, scoped to the authenticated user.\n    match /users/{userId}/sessions/{sessionId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n\n    // Rules for the message history within a session.\n    match /users/{userId}/sessions/{sessionId}/history/{messageId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n\n    // Rules for user-generated content subcollections.\n    match /users/{userId}/summaries/{summaryId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/quizzes/{quizId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/flashcardSets/{setId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studyPlans/{planId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studySessions/{studySessionId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/goals/{goalId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n\n    // Public summaries collection: Allow anyone to read, but disallow client writes.\n    match /publicSummaries/{slug} {\n      allow get: if true;\n      allow list, write: if false;\n    }\n\n    // Prompt templates can be read by any user, authenticated or not.\n    match /promptTemplates/{templateId} {\n      allow get, list: if true;\n      allow write: if false; // Disallow client writes\n    }\n\n    // Personas can be read by anyone, but not written to by clients.\n    match /personas/{personaId} {\n        allow get, list: if true;\n        allow write: if false; // Only backend/console should write\n    }\n  }\n}\n"}]}}
[debug] [2025-07-13T09:06:41.743Z] Jul 13, 2025 9:06:41 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 9:06:41 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-13T09:06:42.018Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-13T09:06:42.021Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-13T09:43:39.280Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-13T09:43:39.280Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // A user can only interact with their own document.\n    match /users/{userId} {\n      allow get, create: if request.auth.uid == userId;\n      allow update: if request.auth.uid == userId\n                    && request.resource.data.diff(resource.data).affectedKeys()\n                       .hasOnly(['preferredPersona', 'favoritePrompts', 'lastLogin']);\n      allow list, delete: if false;\n    }\n    \n    // Rules for Genkit sessions stored at the top level.\n    match /sessions/{sessionId} {\n      // A user can only read/write to their own session documents.\n      // We identify ownership by checking if the resource's userId field\n      // matches the authenticated user's uid.\n      allow read, write: if request.auth != null && (\n        (resource == null) || (resource.data.userId == request.auth.uid)\n      );\n    }\n\n    // Rules for user-generated content subcollections.\n    match /users/{userId}/summaries/{summaryId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/quizzes/{quizId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/flashcardSets/{setId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studyPlans/{planId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studySessions/{studySessionId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/goals/{goalId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n\n    // Public summaries collection: Allow anyone to read, but disallow client writes.\n    match /publicSummaries/{slug} {\n      allow get: if true;\n      allow list, write: if false;\n    }\n\n    // Prompt templates can be read by any user, authenticated or not.\n    match /promptTemplates/{templateId} {\n      allow get, list: if true;\n      allow write: if false; // Disallow client writes\n    }\n\n    // Personas can be read by anyone, but not written to by clients.\n    match /personas/{personaId} {\n        allow get, list: if true;\n        allow write: if false; // Only backend/console should write\n    }\n  }\n}\n"}]}}
[debug] [2025-07-13T09:43:39.304Z] Jul 13, 2025 9:43:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 9:43:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-13T09:43:39.350Z] Jul 13, 2025 9:43:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 9:43:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-13T09:43:39.601Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-13T09:43:39.601Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[debug] [2025-07-13T10:00:39.529Z] Jul 13, 2025 10:00:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Jul 13, 2025 10:00:39 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:00:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nJul 13, 2025 10:00:39 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2025-07-13T10:00:39.699Z] Jul 13, 2025 10:00:39 AM io.grpc.netty.NettyServerTransport notifyTerminated
INFO: Transport failed
io.netty.handler.codec.http2.Http2Exception: Unexpected HTTP/1.x request: GET / 
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:107)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:315)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:245)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:451)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:00:39 AM io.grpc.netty.NettyServerTransport notifyTerminated\nINFO: Transport failed\nio.netty.handler.codec.http2.Http2Exception: Unexpected HTTP/1.x request: GET / \n\tat io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:107)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:315)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:245)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:451)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n\n"}}
[debug] [2025-07-13T10:00:39.751Z] Jul 13, 2025 10:00:39 AM io.grpc.netty.NettyServerTransport notifyTerminated
INFO: Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 16030105a8010005a403033c2449b5da588b1c1be209ae46
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:107)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:319)
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:245)
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:451)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)

 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:00:39 AM io.grpc.netty.NettyServerTransport notifyTerminated\nINFO: Transport failed\nio.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 16030105a8010005a403033c2449b5da588b1c1be209ae46\n\tat io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:107)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:319)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:245)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:451)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1407)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:918)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n\n"}}
[debug] [2025-07-13T10:00:40.782Z] Jul 13, 2025 10:00:40 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:00:40 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2025-07-13T10:06:00.544Z] Jul 13, 2025 10:06:00 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:06:00 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[debug] [2025-07-13T10:06:34.453Z] Jul 13, 2025 10:06:34 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:06:34 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2025-07-13T10:13:38.725Z] Jul 13, 2025 10:13:38 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:13:38 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2025-07-13T10:15:54.369Z] Jul 13, 2025 10:15:54 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:15:54 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-13T10:28:53.524Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-13T10:28:53.525Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // A user can only interact with their own document.\n    match /users/{userId} {\n      allow get, create: if request.auth.uid == userId;\n      allow update: if request.auth.uid == userId\n                    && request.resource.data.diff(resource.data).affectedKeys()\n                       .hasOnly(['preferredPersona', 'favoritePrompts', 'lastLogin']);\n      allow list, delete: if false;\n\n      // A user can manage their own chat sessions.\n      // list is required for the useChatHistory hook.\n      // get, create, update are required for the chat flow.\n      match /chats/{chatId} {\n        allow list, get, create, update: if request.auth.uid == userId;\n        allow delete: if false;\n      }\n    }\n\n    // Rules for user-generated content subcollections.\n    match /users/{userId}/summaries/{summaryId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/quizzes/{quizId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/flashcardSets/{setId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studyPlans/{planId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/studySessions/{studySessionId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n    match /users/{userId}/goals/{goalId} {\n      allow read, write: if request.auth.uid == userId;\n    }\n\n    // Public summaries collection: Allow anyone to read, but disallow client writes.\n    match /publicSummaries/{slug} {\n      allow get: if true;\n      allow list, write: if false;\n    }\n\n    // Prompt templates can be read by any user, authenticated or not.\n    match /promptTemplates/{templateId} {\n      allow get, list: if true;\n      allow write: if false; // Disallow client writes\n    }\n\n    // Personas can be read by anyone, but not written to by clients.\n    match /personas/{personaId} {\n        allow get, list: if true;\n        allow write: if false; // Only backend/console should write\n    }\n  }\n}\n"}]}}
[debug] [2025-07-13T10:28:53.555Z] Jul 13, 2025 10:28:53 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:28:53 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-13T10:28:53.612Z] Jul 13, 2025 10:28:53 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:28:53 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-13T10:28:53.936Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-13T10:28:53.937Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[debug] [2025-07-13T10:55:09.189Z] Jul 13, 2025 10:55:09 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 10:55:09 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[debug] [2025-07-13T11:55:08.709Z] Jul 13, 2025 11:55:08 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 13, 2025 11:55:08 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[debug] [2025-07-20T07:43:10.927Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.930Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.930Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.931Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.931Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.931Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.931Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.932Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.932Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.932Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.933Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.933Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.933Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.933Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.934Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.934Z] No OAuth tokens found
[debug] [2025-07-20T07:43:10.989Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-20T07:43:10.989Z] > authorizing via signed-in user (firebase-adminsdk-fbsvc@focusflow-ai-w1jt3.iam.gserviceaccount.com)
[debug] [2025-07-20T07:57:04.713Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.716Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.717Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.717Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.717Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.718Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.718Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.718Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.718Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.719Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.720Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.720Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.721Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.722Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.722Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.723Z] No OAuth tokens found
[debug] [2025-07-20T07:57:04.766Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-20T07:57:04.767Z] > authorizing via signed-in user (firebase-adminsdk-fbsvc@focusflow-ai-w1jt3.iam.gserviceaccount.com)
[debug] [2025-07-20T08:44:27.794Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.796Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.797Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.797Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.798Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.798Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.798Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.798Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.799Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.799Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.799Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.799Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.800Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.800Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.800Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.801Z] No OAuth tokens found
[debug] [2025-07-20T08:44:27.821Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-20T08:44:27.935Z] Running auto auth
[debug] [2025-07-20T12:47:36.784Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.836Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.839Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.840Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.840Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.841Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.842Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.843Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.843Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.844Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.845Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.845Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.846Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.846Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.848Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.848Z] No OAuth tokens found
[debug] [2025-07-20T12:47:36.930Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-20T12:47:37.371Z] Running auto auth
[debug] [2025-07-20T13:25:38.257Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.260Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.261Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.261Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.262Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.262Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.263Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.263Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.263Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.264Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.264Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.264Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.265Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.265Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.265Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.266Z] No OAuth tokens found
[debug] [2025-07-20T13:25:38.293Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-20T13:25:38.294Z] > authorizing via signed-in user (firebase-adminsdk-fbsvc@focusflow-ai-w1jt3.iam.gserviceaccount.com)
[debug] [2025-07-20T14:33:29.483Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.486Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.487Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.487Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.487Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.488Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.488Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.489Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.489Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.490Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.490Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.490Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.491Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.491Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.491Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.492Z] No OAuth tokens found
[debug] [2025-07-20T14:33:29.517Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-20T14:33:29.657Z] Running auto auth
[debug] [2025-07-21T07:57:38.907Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.911Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.912Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.912Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.913Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.913Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.913Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.914Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.914Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.914Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.915Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.915Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.916Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.916Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.916Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.917Z] No OAuth tokens found
[debug] [2025-07-21T07:57:38.960Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-07-21T07:57:39.103Z] Running auto auth
