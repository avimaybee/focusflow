
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // A user can only interact with their own document.
    match /users/{userId} {
      allow get, create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId
                    && request.resource.data.diff(resource.data).affectedKeys()
                       .hasOnly(['preferredPersona', 'learningGoals', 'favoritePrompts', 'lastLogin', 'usage', 'onboardingCompleted']);
      allow list, delete: if false;

      // A user can manage their own chat sessions.
      // list is required for the useChatHistory hook.
      // get, create, update are required for the chat flow.
      match /chats/{chatId} {
        allow list, get, create, update: if request.auth.uid == userId;
        allow delete: if request.auth.uid == userId;
      }

      // A user can manage their own AI memory.
      match /memory/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Rules for user-generated content subcollections.
    match /users/{userId}/summaries/{summaryId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /users/{userId}/quizzes/{quizId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /users/{userId}/flashcardSets/{setId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /users/{userId}/studyPlans/{planId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /users/{userId}/studySessions/{studySessionId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /users/{userId}/goals/{goalId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /users/{userId}/savedMessages/{messageId} {
        allow read, write: if request.auth.uid == userId;
    }

    // A user can manage their own notes document.
    match /users/{userId}/notes/{noteId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Public summaries collection: Allow anyone to read, but disallow client writes.
    match /publicSummaries/{slug} {
      allow get, list: if true;
      allow write: if false;
    }

    // Public flashcards collection: Allow anyone to read, but disallow client writes.
    match /publicFlashcardSets/{slug} {
      allow get, list: if true;
      allow write: if false;
    }

    // Public quizzes collection: Allow anyone to read, but disallow client writes.
    match /publicQuizzes/{slug} {
      allow get, list: if true;
      allow write: if false;
    }

    // Public study plans collection: Allow anyone to read, but disallow client writes.
    match /publicStudyPlans/{slug} {
      allow get, list: if true;
      allow write: if false;
    }

    // Public blog posts collection: Allow anyone to read, but disallow client writes.
    match /publicBlogPosts/{slug} {
      allow get, list: if true;
      allow write: if false;
    }

    // Prompt templates can be read by any user, authenticated or not.
    match /promptTemplates/{templateId} {
      allow get, list: if true;
      allow write: if false; // Disallow client writes
    }

    // Personas can be read by anyone, but not written to by clients.
    match /personas/{personaId} {
        allow get, list: if true;
        allow write: if false; // Only backend/console should write
    }

    // Rules for guest (anonymous) user chat sessions.
    // Guests can only access their own documents in the guestChats collection.
    match /guestChats/{uid}/{document=**} {
      allow read, write: if request.auth != null && 
                          request.auth.token.firebase.sign_in_provider == 'anonymous' && 
                          request.auth.uid == uid;
    }
  }
}
