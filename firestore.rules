rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // A user can only interact with their own document.
    match /users/{userId} {
      allow get: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId
                    && request.resource.data.diff(resource.data).affectedKeys()
                       .hasOnly(['preferredPersona', 'favoritePrompts', 'lastLogin']);
      allow list, delete: if false;
    }

    // Rules for the 'chats' subcollection.
    match /users/{userId}/chats/{chatId} {
      allow list, get: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      // Allow updating the title or the context of a chat.
      allow update: if request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['title', 'context']);
      allow delete: if false;
    }
    
    // Rules for the 'messages' sub-subcollection.
    match /users/{userId}/chats/{chatId}/messages/{messageId} {
      allow list, get: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update, delete: if false;
    }

    // Public summaries collection: Allow anyone to read, but disallow client writes for security.
    match /publicSummaries/{slug} {
      allow get: if true;
      allow list, write: if false;
    }

    // Prompt templates can be read by any authenticated user.
    match /promptTemplates/{templateId} {
      allow get, list: if request.auth != null;
      allow write: if false; // Disallow client writes
    }

    // Personas can be read by anyone, but not written to by clients.
    match /personas/{personaId} {
        allow get, list: if true;
        allow write: if false;
    }

    // Rules for user-generated content.
    match /users/{userId}/summaries/{summaryId} {
      allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/flashcardSets/{setId} {
      allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/quizzes/{quizId} {
      allow read, write, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/studyPlans/{planId} {
      allow read, write, delete: if request.auth.uid == userId;
    }
  }
}