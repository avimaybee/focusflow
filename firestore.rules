rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // A user can only interact with their own document and subcollections.
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }

    // Rules for the top-level collections that store user-generated content.
    // Users can only access documents where their UID is stored in the `userId` field.
    match /userCollections/{collectionId} {
      allow read, update, delete: if resource.data.userId == request.auth.uid;
      allow create: if request.resource.data.userId == request.auth.uid;
    }

    // Public content collections: Allow anyone to read, but disallow client writes.
    match /publicSummaries/{slug} {
      allow get, list: if true;
      allow write: if false;
    }
    match /publicFlashcardSets/{slug} {
      allow get, list: if true;
      allow write: if false;
    }
    match /publicQuizzes/{slug} {
      allow get, list: if true;
      allow write: if false;
    }
    match /publicStudyPlans/{slug} {
      allow get, list: if true;
      allow write: if false;
    }
    match /publicBlogPosts/{slug} {
      allow get, list: if true;
      allow write: if false;
    }

    // Public, read-only collections for app configuration.
    match /promptTemplates/{templateId} {
      allow get, list: if true;
      allow write: if false;
    }
    match /personas/{personaId} {
        allow get, list: if true;
        allow write: if false;
    }

    // Rules for guest (anonymous) user chat sessions.
    match /guestChats/{uid}/{document=**} {
      allow read, write: if request.auth != null && 
                          request.auth.token.firebase.sign_in_provider == 'anonymous' && 
                          request.auth.uid == uid;
    }
  }
}